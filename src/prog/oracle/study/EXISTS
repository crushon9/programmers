WHERE EXISTS (서브쿼리)의 의미
1. 메인쿼리의 테이블이 서브쿼리에도 있을 때
   : 메인쿼리의 select 컬럼을 서브쿼리의 1의 자리에 넣었을때 조회한 목록 중에
     해당되는 행은 출력 아니라면 출력하지 않음
SELECT ENAME, SAL FROM EMP WHERE EXISTS (SELECT 1 FROM EMP WHERE SAL > 20000);

2. 메인쿼리의 테이블이 서브쿼리에 존재하지 않으며 연관 컬럼만 등장할 때
   : 연관 컬럼이 속한 테이블은 LEFT OUTEER JOIN 하고
     메인 쿼리 기준으로 연관 컬럼(A.ID)값을 서브쿼리에 하나씩 넣어보면서
     조회가되면(존재하면) 메인쿼리에서 해당 행을 출력하고, 없으면 출력하지 않는다

  [예시 테이블 정보]
-- MEMBER 회원테이블(PK id)
-- EVENT 이벤트(PK eventid)
-- SENDMAIL 이벤트마다 회원에게 메일을 보낸 사건(FK id, eventid)
-- 아래 쿼리는 이벤트건수보다 메일발송건수가 적은 회원을 조회하는 쿼리
SELECT A.ID
FROM MEMBER A
WHERE EXISTS(SELECT 1
			FROM EVENT B, SENDMAIL C
			WHERE B.EVENTID = C.EVENTID
			AND A.ID = C.ID
			HAVING COUNT(*) < (SELECT COUNT(*) FROM EVENT));

// 처음엔 위의 쿼리를 아래의 쿼리와 같다고 생각했지만
   아래의 경우는 모든 테이블이 INNER JOIN 되었기 때문에 SENDMAIL C에 존재하는 회원중에서 조건을 따지므로 결과값이 달라짐
   (사실 SENDMAIL C는 MEMBER A에 종속되어있으므로 MEMBER A를 조인하지 않아도 결과는 같음)
SELECT A.ID, COUNT(*)
FROM EVENT B, SENDMAIL C, MEMBER A
WHERE B.EVENTID = C.EVENTID
AND A.ID = C.ID
GROUP BY A.ID
HAVING COUNT(*) < (SELECT COUNT(*) FROM EVENT)
ORDER BY A.ID;

// 결론은 **아래의 MEMBER A기준으로 LEFT OUTER JOIN과 결과가 같음
SELECT A.ID, COUNT(*)
FROM EVENT B, SENDMAIL C, MEMBER A
WHERE B.EVENTID(+) = C.EVENTID
AND A.ID = C.ID(+)
GROUP BY A.ID
HAVING COUNT(*) < (SELECT COUNT(*) FROM EVENT)
ORDER BY A.ID;
// (+) 기호실험 결과
  : WHERE절 AND 순서에 상관없이(+)가 붙은 테이블은 NULL로 조회됨(OUTER JOIN 된다)
    (+) 기호는 =연산에서 한 쪽에만 사용 가능하며 (SQL Error [1468] [72000]: ORA-01468: outer-join된 테이블은 1개만 지정할 수 있습니다)
    한 테이블 당 한 번만 사용가능하다 (SQL Error [1417] [72000]: ORA-01417: 하나의 테이블은 하나의 다른 테이블과 포괄 조인할 수 있습니다)


// GROUP BY 대신 EXISTS를 사용하면 차이가 뭘까? SELECT 구문에서 자유롭게 데이터를 가져올 수 있을 듯
